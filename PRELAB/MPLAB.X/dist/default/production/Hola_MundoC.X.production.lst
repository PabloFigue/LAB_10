

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 09 07:25:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     008F                     	;# 
    99     0090                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0095                     	;# 
   107     0096                     	;# 
   108     0097                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009A                     	;# 
   112     009B                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     0105                     	;# 
   118     0107                     	;# 
   119     0108                     	;# 
   120     0109                     	;# 
   121     010C                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     0185                     	;# 
   127     0187                     	;# 
   128     0188                     	;# 
   129     0189                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     008F                     	;# 
   177     0090                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0097                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009A                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     0105                     	;# 
   196     0107                     	;# 
   197     0108                     	;# 
   198     0109                     	;# 
   199     010C                     	;# 
   200     010C                     	;# 
   201     010D                     	;# 
   202     010E                     	;# 
   203     010F                     	;# 
   204     0185                     	;# 
   205     0187                     	;# 
   206     0188                     	;# 
   207     0189                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     000B                     _INTCONbits	set	11
   211     0009                     _PORTE	set	9
   212     0005                     _PORTA	set	5
   213     000C                     _PIR1bits	set	12
   214     001A                     _RCREG	set	26
   215     0008                     _PORTD	set	8
   216     0019                     _TXREG	set	25
   217     00C4                     _CREN	set	196
   218     0064                     _TXIF	set	100
   219     00C7                     _SPEN	set	199
   220     0065                     _RCIF	set	101
   221     0031                     _RB1	set	49
   222     0030                     _RB0	set	48
   223     0058                     _RBIF	set	88
   224     008F                     _OSCCONbits	set	143
   225     0096                     _IOCB	set	150
   226     0095                     _WPUB	set	149
   227     0081                     _OPTION_REGbits	set	129
   228     0089                     _TRISE	set	137
   229     0088                     _TRISD	set	136
   230     0086                     _TRISB	set	134
   231     009A                     _SPBRGH	set	154
   232     0099                     _SPBRG	set	153
   233     04C5                     _TXEN	set	1221
   234     04C4                     _SYNC	set	1220
   235     04C2                     _BRGH	set	1218
   236     0189                     _ANSELH	set	393
   237     0C3B                     _BRG16	set	3131
   238                           
   239                           	psect	cinit
   240     0011                     start_initialization:	
   241                           ; #config settings
   242                           
   243     0011                     __initialization:
   244                           
   245                           ; Clear objects allocated to BANK0
   246     0011  1283               	bcf	3,5	;RP0=0, select bank0
   247     0012  1303               	bcf	3,6	;RP1=0, select bank0
   248     0013  01A0               	clrf	__pbssBANK0& (0+127)
   249     0014  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   250     0015  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   251     0016  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   252     0017  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   253     0018  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   254     0019  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   255     001A  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   256     001B  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   257     001C                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260     001C                     __end_of__initialization:
   261     001C  0183               	clrf	3
   262     001D  120A  118A  2904   	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265     0020                     __pbssBANK0:
   266     0020                     _unidad:
   267     0020                     	ds	2
   268     0022                     _decena:
   269     0022                     	ds	2
   270     0024                     _centena:
   271     0024                     	ds	2
   272     0026                     _numero:
   273     0026                     	ds	2
   274     0028                     _contador:
   275     0028                     	ds	1
   276                           
   277                           	psect	cstackCOMMON
   278     0070                     __pcstackCOMMON:
   279     0070                     ?_setup:
   280     0070                     ?_initUART:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0070                     ?_isr:	
   284                           ; 1 bytes @ 0x0
   285                           
   286     0070                     ?_main:	
   287                           ; 1 bytes @ 0x0
   288                           
   289     0070                     ?___awdiv:	
   290                           ; 1 bytes @ 0x0
   291                           
   292     0070                     ___awdiv@divisor:	
   293                           ; 2 bytes @ 0x0
   294                           
   295                           
   296                           ; 2 bytes @ 0x0
   297     0070                     	ds	2
   298     0072                     ___awdiv@dividend:
   299                           
   300                           ; 2 bytes @ 0x2
   301     0072                     	ds	2
   302     0074                     ??___awdiv:
   303                           
   304                           ; 1 bytes @ 0x4
   305     0074                     	ds	1
   306     0075                     ___awdiv@counter:
   307                           
   308                           ; 1 bytes @ 0x5
   309     0075                     	ds	1
   310     0076                     ___awdiv@sign:
   311                           
   312                           ; 1 bytes @ 0x6
   313     0076                     	ds	1
   314     0077                     ___awdiv@quotient:
   315                           
   316                           ; 2 bytes @ 0x7
   317     0077                     	ds	2
   318     0079                     ?___awmod:
   319     0079                     ___awmod@divisor:	
   320                           ; 2 bytes @ 0x9
   321                           
   322                           
   323                           ; 2 bytes @ 0x9
   324     0079                     	ds	2
   325     007B                     ___awmod@dividend:
   326                           
   327                           ; 2 bytes @ 0xB
   328     007B                     	ds	2
   329     007D                     ??___awmod:
   330                           
   331                           ; 1 bytes @ 0xD
   332     007D                     	ds	1
   333                           
   334                           	psect	cstackBANK0
   335     0029                     __pcstackBANK0:
   336     0029                     ___awmod@counter:
   337                           
   338                           ; 1 bytes @ 0x0
   339     0029                     	ds	1
   340     002A                     ___awmod@sign:
   341                           
   342                           ; 1 bytes @ 0x1
   343     002A                     	ds	1
   344     002B                     ??_isr:
   345                           
   346                           ; 1 bytes @ 0x2
   347     002B                     	ds	4
   348     002F                     ??_setup:
   349     002F                     ??_initUART:	
   350                           ; 1 bytes @ 0x6
   351                           
   352     002F                     ??_main:	
   353                           ; 1 bytes @ 0x6
   354                           
   355                           
   356                           ; 1 bytes @ 0x6
   357     002F                     	ds	2
   358                           
   359                           	psect	maintext
   360     0104                     __pmaintext:	
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 87 in file "Prelab_10.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : B00/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0
   382 ;;      Temps:          0       2       0       0       0
   383 ;;      Totals:         0       2       0       0       0
   384 ;;Total ram usage:        2 bytes
   385 ;; Hardware stack levels required when called: 3
   386 ;; This function calls:
   387 ;;		_initUART
   388 ;;		_setup
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394     0104                     _main:	
   395                           ;psect for function _main
   396                           
   397     0104                     l1027:	
   398                           ;incstack = 0
   399                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   400                           
   401                           
   402                           ;Prelab_10.c: 89:     setup();
   403     0104  120A  118A  21BF  120A  118A  	fcall	_setup
   404                           
   405                           ;Prelab_10.c: 90:     initUART();
   406     0109  120A  118A  21DC  120A  118A  	fcall	_initUART
   407     010E                     l1029:
   408                           
   409                           ;Prelab_10.c: 92:     {;Prelab_10.c: 93:         TXREG = centena + 48;
   410     010E  1283               	bcf	3,5	;RP0=0, select bank0
   411     010F  1303               	bcf	3,6	;RP1=0, select bank0
   412     0110  0824               	movf	_centena,w
   413     0111  3E30               	addlw	48
   414     0112  0099               	movwf	25	;volatile
   415     0113                     l1031:
   416                           
   417                           ;Prelab_10.c: 94:         _delay((unsigned long)((5)*(8000000/4000.0)));
   418     0113  300D               	movlw	13
   419     0114  1283               	bcf	3,5	;RP0=0, select bank0
   420     0115  1303               	bcf	3,6	;RP1=0, select bank0
   421     0116  00B0               	movwf	??_main+1
   422     0117  30FB               	movlw	251
   423     0118  00AF               	movwf	??_main
   424     0119                     u517:
   425     0119  0BAF               	decfsz	??_main,f
   426     011A  2919               	goto	u517
   427     011B  0BB0               	decfsz	??_main+1,f
   428     011C  2919               	goto	u517
   429     011D                     l1033:
   430                           
   431                           ;Prelab_10.c: 95:         TXREG = decena + 48;
   432     011D  1283               	bcf	3,5	;RP0=0, select bank0
   433     011E  1303               	bcf	3,6	;RP1=0, select bank0
   434     011F  0822               	movf	_decena,w
   435     0120  3E30               	addlw	48
   436     0121  0099               	movwf	25	;volatile
   437     0122                     l1035:
   438                           
   439                           ;Prelab_10.c: 96:         _delay((unsigned long)((5)*(8000000/4000.0)));
   440     0122  300D               	movlw	13
   441     0123  1283               	bcf	3,5	;RP0=0, select bank0
   442     0124  1303               	bcf	3,6	;RP1=0, select bank0
   443     0125  00B0               	movwf	??_main+1
   444     0126  30FB               	movlw	251
   445     0127  00AF               	movwf	??_main
   446     0128                     u527:
   447     0128  0BAF               	decfsz	??_main,f
   448     0129  2928               	goto	u527
   449     012A  0BB0               	decfsz	??_main+1,f
   450     012B  2928               	goto	u527
   451     012C                     l1037:
   452                           
   453                           ;Prelab_10.c: 97:         TXREG = unidad + 48;
   454     012C  1283               	bcf	3,5	;RP0=0, select bank0
   455     012D  1303               	bcf	3,6	;RP1=0, select bank0
   456     012E  0820               	movf	_unidad,w
   457     012F  3E30               	addlw	48
   458     0130  0099               	movwf	25	;volatile
   459     0131                     l1039:
   460                           
   461                           ;Prelab_10.c: 98:         _delay((unsigned long)((5)*(8000000/4000.0)));
   462     0131  300D               	movlw	13
   463     0132  1283               	bcf	3,5	;RP0=0, select bank0
   464     0133  1303               	bcf	3,6	;RP1=0, select bank0
   465     0134  00B0               	movwf	??_main+1
   466     0135  30FB               	movlw	251
   467     0136  00AF               	movwf	??_main
   468     0137                     u537:
   469     0137  0BAF               	decfsz	??_main,f
   470     0138  2937               	goto	u537
   471     0139  0BB0               	decfsz	??_main+1,f
   472     013A  2937               	goto	u537
   473     013B                     l1041:
   474                           
   475                           ;Prelab_10.c: 99:         TXREG = '\n';
   476     013B  300A               	movlw	10
   477     013C  1283               	bcf	3,5	;RP0=0, select bank0
   478     013D  1303               	bcf	3,6	;RP1=0, select bank0
   479     013E  0099               	movwf	25	;volatile
   480     013F                     l1043:
   481                           
   482                           ;Prelab_10.c: 100:         _delay((unsigned long)((5)*(8000000/4000.0)));
   483     013F  300D               	movlw	13
   484     0140  1283               	bcf	3,5	;RP0=0, select bank0
   485     0141  1303               	bcf	3,6	;RP1=0, select bank0
   486     0142  00B0               	movwf	??_main+1
   487     0143  30FB               	movlw	251
   488     0144  00AF               	movwf	??_main
   489     0145                     u547:
   490     0145  0BAF               	decfsz	??_main,f
   491     0146  2945               	goto	u547
   492     0147  0BB0               	decfsz	??_main+1,f
   493     0148  2945               	goto	u547
   494     0149                     l1045:
   495                           
   496                           ;Prelab_10.c: 101:         TXREG = '\r';
   497     0149  300D               	movlw	13
   498     014A  1283               	bcf	3,5	;RP0=0, select bank0
   499     014B  1303               	bcf	3,6	;RP1=0, select bank0
   500     014C  0099               	movwf	25	;volatile
   501     014D                     l1047:
   502                           
   503                           ;Prelab_10.c: 102:         _delay((unsigned long)((5)*(8000000/4000.0)));
   504     014D  300D               	movlw	13
   505     014E  1283               	bcf	3,5	;RP0=0, select bank0
   506     014F  1303               	bcf	3,6	;RP1=0, select bank0
   507     0150  00B0               	movwf	??_main+1
   508     0151  30FB               	movlw	251
   509     0152  00AF               	movwf	??_main
   510     0153                     u557:
   511     0153  0BAF               	decfsz	??_main,f
   512     0154  2953               	goto	u557
   513     0155  0BB0               	decfsz	??_main+1,f
   514     0156  2953               	goto	u557
   515     0157                     l1049:
   516                           
   517                           ;Prelab_10.c: 105:         if(RCIF == 1){
   518     0157  1283               	bcf	3,5	;RP0=0, select bank0
   519     0158  1303               	bcf	3,6	;RP1=0, select bank0
   520     0159  1E8C               	btfss	12,5	;volatile
   521     015A  295C               	goto	u501
   522     015B  295D               	goto	u500
   523     015C                     u501:
   524     015C  290E               	goto	l1029
   525     015D                     u500:
   526     015D                     l1051:
   527                           
   528                           ;Prelab_10.c: 106:             PORTD = RCREG;
   529     015D  081A               	movf	26,w	;volatile
   530     015E  0088               	movwf	8	;volatile
   531     015F                     l1053:
   532                           
   533                           ;Prelab_10.c: 107:             PIR1bits.RCIF = 0;
   534     015F  128C               	bcf	12,5	;volatile
   535     0160  290E               	goto	l1029
   536     0161  120A  118A  280E   	ljmp	start
   537     0164                     __end_of_main:
   538                           
   539                           	psect	text1
   540     01BF                     __ptext1:	
   541 ;; *************** function _setup *****************
   542 ;; Defined at:
   543 ;;		line 173 in file "Prelab_10.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; Hardware stack levels required when called: 2
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571     01BF                     _setup:	
   572                           ;psect for function _setup
   573                           
   574     01BF                     l871:	
   575                           ;incstack = 0
   576                           ; Regs used in _setup: [wreg+status,2+status,0]
   577                           
   578                           
   579                           ;Prelab_10.c: 176:     ANSELH = 0;
   580     01BF  1683               	bsf	3,5	;RP0=1, select bank3
   581     01C0  1703               	bsf	3,6	;RP1=1, select bank3
   582     01C1  0189               	clrf	9	;volatile
   583     01C2                     l873:
   584                           
   585                           ;Prelab_10.c: 178:     TRISB = 0b11;
   586     01C2  3003               	movlw	3
   587     01C3  1683               	bsf	3,5	;RP0=1, select bank1
   588     01C4  1303               	bcf	3,6	;RP1=0, select bank1
   589     01C5  0086               	movwf	6	;volatile
   590     01C6                     l875:
   591                           
   592                           ;Prelab_10.c: 179:     TRISD = 0;
   593     01C6  0188               	clrf	8	;volatile
   594     01C7                     l877:
   595                           
   596                           ;Prelab_10.c: 180:     TRISE = 0;
   597     01C7  0189               	clrf	9	;volatile
   598     01C8                     l879:
   599                           
   600                           ;Prelab_10.c: 182:     PORTA = 0;
   601     01C8  1283               	bcf	3,5	;RP0=0, select bank0
   602     01C9  1303               	bcf	3,6	;RP1=0, select bank0
   603     01CA  0185               	clrf	5	;volatile
   604     01CB                     l881:
   605                           
   606                           ;Prelab_10.c: 183:     PORTD = 0;
   607     01CB  0188               	clrf	8	;volatile
   608     01CC                     l883:
   609                           
   610                           ;Prelab_10.c: 184:     PORTE = 0;
   611     01CC  0189               	clrf	9	;volatile
   612     01CD                     l885:
   613                           
   614                           ;Prelab_10.c: 187:     OPTION_REGbits.nRBPU = 0;
   615     01CD  1683               	bsf	3,5	;RP0=1, select bank1
   616     01CE  1303               	bcf	3,6	;RP1=0, select bank1
   617     01CF  1381               	bcf	1,7	;volatile
   618                           
   619                           ;Prelab_10.c: 188:     WPUB = 0b11;
   620     01D0  3003               	movlw	3
   621     01D1  0095               	movwf	21	;volatile
   622                           
   623                           ;Prelab_10.c: 189:     IOCB = 0b11;
   624     01D2  3003               	movlw	3
   625     01D3  0096               	movwf	22	;volatile
   626     01D4                     l887:
   627                           
   628                           ;Prelab_10.c: 191:     OSCCONbits.IRCF = 0b111;
   629     01D4  3070               	movlw	112
   630     01D5  048F               	iorwf	15,f	;volatile
   631     01D6                     l889:
   632                           
   633                           ;Prelab_10.c: 192:     OSCCONbits.SCS = 1;
   634     01D6  140F               	bsf	15,0	;volatile
   635     01D7                     l891:
   636                           
   637                           ;Prelab_10.c: 195:     INTCONbits.GIE = 1;
   638     01D7  178B               	bsf	11,7	;volatile
   639     01D8                     l893:
   640                           
   641                           ;Prelab_10.c: 196:     INTCONbits.PEIE = 1;
   642     01D8  170B               	bsf	11,6	;volatile
   643     01D9                     l895:
   644                           
   645                           ;Prelab_10.c: 197:     INTCONbits.RBIF = 0;
   646     01D9  100B               	bcf	11,0	;volatile
   647     01DA                     l897:
   648                           
   649                           ;Prelab_10.c: 198:     INTCONbits.RBIE = 1;
   650     01DA  158B               	bsf	11,3	;volatile
   651     01DB                     l95:
   652     01DB  0008               	return
   653     01DC                     __end_of_setup:
   654                           
   655                           	psect	text2
   656     01DC                     __ptext2:	
   657 ;; *************** function _initUART *****************
   658 ;; Defined at:
   659 ;;		line 118 in file "Prelab_10.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0
   676 ;;      Totals:         0       0       0       0       0
   677 ;;Total ram usage:        0 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; Hardware stack levels required when called: 2
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687     01DC                     _initUART:	
   688                           ;psect for function _initUART
   689                           
   690     01DC                     l901:	
   691                           ;incstack = 0
   692                           ; Regs used in _initUART: [wreg+status,2]
   693                           
   694                           
   695                           ;Prelab_10.c: 144:     SPBRG = 12;
   696     01DC  300C               	movlw	12
   697     01DD  1683               	bsf	3,5	;RP0=1, select bank1
   698     01DE  1303               	bcf	3,6	;RP1=0, select bank1
   699     01DF  0099               	movwf	25	;volatile
   700     01E0                     l903:
   701                           
   702                           ;Prelab_10.c: 145:     SPBRGH = 0;
   703     01E0  019A               	clrf	26	;volatile
   704     01E1                     l905:
   705                           
   706                           ;Prelab_10.c: 146:     BRGH = 0;
   707     01E1  1118               	bcf	24,2	;volatile
   708     01E2                     l907:
   709                           
   710                           ;Prelab_10.c: 147:     BRG16 = 0;
   711     01E2  1683               	bsf	3,5	;RP0=1, select bank3
   712     01E3  1703               	bsf	3,6	;RP1=1, select bank3
   713     01E4  1187               	bcf	7,3	;volatile
   714     01E5                     l909:
   715                           
   716                           ;Prelab_10.c: 150:     SYNC = 0;
   717     01E5  1683               	bsf	3,5	;RP0=1, select bank1
   718     01E6  1303               	bcf	3,6	;RP1=0, select bank1
   719     01E7  1218               	bcf	24,4	;volatile
   720     01E8                     l911:
   721                           
   722                           ;Prelab_10.c: 151:     SPEN = 1;
   723     01E8  1283               	bcf	3,5	;RP0=0, select bank0
   724     01E9  1303               	bcf	3,6	;RP1=0, select bank0
   725     01EA  1798               	bsf	24,7	;volatile
   726     01EB                     l913:
   727                           
   728                           ;Prelab_10.c: 157:     TXEN = 1;
   729     01EB  1683               	bsf	3,5	;RP0=1, select bank1
   730     01EC  1303               	bcf	3,6	;RP1=0, select bank1
   731     01ED  1698               	bsf	24,5	;volatile
   732     01EE                     l915:
   733                           
   734                           ;Prelab_10.c: 158:     TXIF = 0;
   735     01EE  1283               	bcf	3,5	;RP0=0, select bank0
   736     01EF  1303               	bcf	3,6	;RP1=0, select bank0
   737     01F0  120C               	bcf	12,4	;volatile
   738     01F1                     l917:
   739                           
   740                           ;Prelab_10.c: 160:     CREN = 1;
   741     01F1  1618               	bsf	24,4	;volatile
   742     01F2                     l919:
   743                           
   744                           ;Prelab_10.c: 161:     RCIF = 0;
   745     01F2  128C               	bcf	12,5	;volatile
   746     01F3                     l92:
   747     01F3  0008               	return
   748     01F4                     __end_of_initUART:
   749                           
   750                           	psect	text3
   751     0020                     __ptext3:	
   752 ;; *************** function _isr *****************
   753 ;; Defined at:
   754 ;;		line 57 in file "Prelab_10.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0, pclath, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          0       4       0       0       0
   771 ;;      Totals:         0       4       0       0       0
   772 ;;Total ram usage:        4 bytes
   773 ;; Hardware stack levels used: 1
   774 ;; Hardware stack levels required when called: 1
   775 ;; This function calls:
   776 ;;		___awdiv
   777 ;;		___awmod
   778 ;; This function is called by:
   779 ;;		Interrupt level 1
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783     0020                     _isr:	
   784                           ;psect for function _isr
   785                           
   786     0020                     i1l1003:
   787                           
   788                           ;Prelab_10.c: 59:     if (RBIF) {
   789     0020  1C0B               	btfss	11,0	;volatile
   790     0021  2823               	goto	u45_21
   791     0022  2824               	goto	u45_20
   792     0023                     u45_21:
   793     0023  288A               	goto	i1l1025
   794     0024                     u45_20:
   795     0024                     i1l1005:
   796                           
   797                           ;Prelab_10.c: 61:         if (RB0 == 0 && RB1 == 1) {
   798     0024  1806               	btfsc	6,0	;volatile
   799     0025  2827               	goto	u46_21
   800     0026  2828               	goto	u46_20
   801     0027                     u46_21:
   802     0027  2830               	goto	i1l1011
   803     0028                     u46_20:
   804     0028                     i1l1007:
   805     0028  1C86               	btfss	6,1	;volatile
   806     0029  282B               	goto	u47_21
   807     002A  282C               	goto	u47_20
   808     002B                     u47_21:
   809     002B  2830               	goto	i1l1011
   810     002C                     u47_20:
   811     002C                     i1l1009:
   812                           
   813                           ;Prelab_10.c: 62:             contador++;
   814     002C  3001               	movlw	1
   815     002D  00AB               	movwf	??_isr
   816     002E  082B               	movf	??_isr,w
   817     002F  07A8               	addwf	_contador,f
   818     0030                     i1l1011:
   819                           
   820                           ;Prelab_10.c: 65:         if (RB0 == 1 && RB1 == 0) {
   821     0030  1C06               	btfss	6,0	;volatile
   822     0031  2833               	goto	u48_21
   823     0032  2834               	goto	u48_20
   824     0033                     u48_21:
   825     0033  283A               	goto	i1l1017
   826     0034                     u48_20:
   827     0034                     i1l1013:
   828     0034  1886               	btfsc	6,1	;volatile
   829     0035  2837               	goto	u49_21
   830     0036  2838               	goto	u49_20
   831     0037                     u49_21:
   832     0037  283A               	goto	i1l1017
   833     0038                     u49_20:
   834     0038                     i1l1015:
   835                           
   836                           ;Prelab_10.c: 66:             contador--;
   837     0038  3001               	movlw	1
   838     0039  02A8               	subwf	_contador,f
   839     003A                     i1l1017:
   840                           
   841                           ;Prelab_10.c: 69:         centena = (contador/100);
   842     003A  3064               	movlw	100
   843     003B  00F0               	movwf	___awdiv@divisor
   844     003C  3000               	movlw	0
   845     003D  00F1               	movwf	___awdiv@divisor+1
   846     003E  0828               	movf	_contador,w
   847     003F  00AB               	movwf	??_isr
   848     0040  01AC               	clrf	??_isr+1
   849     0041  082B               	movf	??_isr,w
   850     0042  00F2               	movwf	___awdiv@dividend
   851     0043  082C               	movf	??_isr+1,w
   852     0044  00F3               	movwf	___awdiv@dividend+1
   853     0045  120A  118A  209D  120A  118A  	fcall	___awdiv
   854     004A  0871               	movf	?___awdiv+1,w
   855     004B  1283               	bcf	3,5	;RP0=0, select bank0
   856     004C  1303               	bcf	3,6	;RP1=0, select bank0
   857     004D  00A5               	movwf	_centena+1
   858     004E  0870               	movf	?___awdiv,w
   859     004F  00A4               	movwf	_centena
   860     0050                     i1l1019:
   861                           
   862                           ;Prelab_10.c: 70:         decena = ((contador/10)%10);
   863     0050  300A               	movlw	10
   864     0051  00F9               	movwf	___awmod@divisor
   865     0052  3000               	movlw	0
   866     0053  00FA               	movwf	___awmod@divisor+1
   867     0054  300A               	movlw	10
   868     0055  00F0               	movwf	___awdiv@divisor
   869     0056  3000               	movlw	0
   870     0057  00F1               	movwf	___awdiv@divisor+1
   871     0058  0828               	movf	_contador,w
   872     0059  00AB               	movwf	??_isr
   873     005A  01AC               	clrf	??_isr+1
   874     005B  082B               	movf	??_isr,w
   875     005C  00F2               	movwf	___awdiv@dividend
   876     005D  082C               	movf	??_isr+1,w
   877     005E  00F3               	movwf	___awdiv@dividend+1
   878     005F  120A  118A  209D  120A  118A  	fcall	___awdiv
   879     0064  0871               	movf	?___awdiv+1,w
   880     0065  00FC               	movwf	___awmod@dividend+1
   881     0066  0870               	movf	?___awdiv,w
   882     0067  00FB               	movwf	___awmod@dividend
   883     0068  120A  118A  2164  120A  118A  	fcall	___awmod
   884     006D  087A               	movf	?___awmod+1,w
   885     006E  1283               	bcf	3,5	;RP0=0, select bank0
   886     006F  1303               	bcf	3,6	;RP1=0, select bank0
   887     0070  00A3               	movwf	_decena+1
   888     0071  0879               	movf	?___awmod,w
   889     0072  00A2               	movwf	_decena
   890     0073                     i1l1021:
   891                           
   892                           ;Prelab_10.c: 71:         unidad = (contador%10);
   893     0073  300A               	movlw	10
   894     0074  00F9               	movwf	___awmod@divisor
   895     0075  3000               	movlw	0
   896     0076  00FA               	movwf	___awmod@divisor+1
   897     0077  0828               	movf	_contador,w
   898     0078  00AB               	movwf	??_isr
   899     0079  01AC               	clrf	??_isr+1
   900     007A  082B               	movf	??_isr,w
   901     007B  00FB               	movwf	___awmod@dividend
   902     007C  082C               	movf	??_isr+1,w
   903     007D  00FC               	movwf	___awmod@dividend+1
   904     007E  120A  118A  2164  120A  118A  	fcall	___awmod
   905     0083  087A               	movf	?___awmod+1,w
   906     0084  1283               	bcf	3,5	;RP0=0, select bank0
   907     0085  1303               	bcf	3,6	;RP1=0, select bank0
   908     0086  00A1               	movwf	_unidad+1
   909     0087  0879               	movf	?___awmod,w
   910     0088  00A0               	movwf	_unidad
   911     0089                     i1l1023:
   912                           
   913                           ;Prelab_10.c: 74:         RBIF = 0;
   914     0089  100B               	bcf	11,0	;volatile
   915     008A                     i1l1025:
   916                           
   917                           ;Prelab_10.c: 76:      _delay((unsigned long)((5)*(8000000/4000.0)));
   918     008A  300D               	movlw	13
   919     008B  1283               	bcf	3,5	;RP0=0, select bank0
   920     008C  1303               	bcf	3,6	;RP1=0, select bank0
   921     008D  00AC               	movwf	??_isr+1
   922     008E  30FB               	movlw	251
   923     008F  00AB               	movwf	??_isr
   924     0090                     u56_27:
   925     0090  0BAB               	decfsz	??_isr,f
   926     0091  2890               	goto	u56_27
   927     0092  0BAC               	decfsz	??_isr+1,f
   928     0093  2890               	goto	u56_27
   929     0094                     i1l80:
   930     0094  1283               	bcf	3,5	;RP0=0, select bank0
   931     0095  1303               	bcf	3,6	;RP1=0, select bank0
   932     0096  082E               	movf	??_isr+3,w
   933     0097  008A               	movwf	10
   934     0098  0E2D               	swapf	??_isr+2,w
   935     0099  0083               	movwf	3
   936     009A  0EFE               	swapf	btemp,f
   937     009B  0E7E               	swapf	btemp,w
   938     009C  0009               	retfie
   939     009D                     __end_of_isr:
   940                           
   941                           	psect	intentry
   942     0004                     __pintentry:	
   943                           ;incstack = 0
   944                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   945                           
   946     0004                     interrupt_function:
   947     007E                     saved_w	set	btemp
   948     0004  00FE               	movwf	btemp
   949     0005  0E03               	swapf	3,w
   950     0006  1283               	bcf	3,5	;RP0=0, select bank0
   951     0007  1303               	bcf	3,6	;RP1=0, select bank0
   952     0008  00AD               	movwf	??_isr+2
   953     0009  080A               	movf	10,w
   954     000A  00AE               	movwf	??_isr+3
   955     000B  120A  118A  2820   	ljmp	_isr
   956                           
   957                           	psect	text4
   958     0164                     __ptext4:	
   959 ;; *************** function ___awmod *****************
   960 ;; Defined at:
   961 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  divisor         2    9[COMMON] int 
   964 ;;  dividend        2   11[COMMON] int 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  sign            1    1[BANK0 ] unsigned char 
   967 ;;  counter         1    0[BANK0 ] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  2    9[COMMON] int 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         4       0       0       0       0
   978 ;;      Locals:         0       2       0       0       0
   979 ;;      Temps:          1       0       0       0       0
   980 ;;      Totals:         5       2       0       0       0
   981 ;;Total ram usage:        7 bytes
   982 ;; Hardware stack levels used: 1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_isr
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990     0164                     ___awmod:	
   991                           ;psect for function ___awmod
   992                           
   993     0164                     i1l965:	
   994                           ;incstack = 0
   995                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   996                           
   997     0164  1283               	bcf	3,5	;RP0=0, select bank0
   998     0165  1303               	bcf	3,6	;RP1=0, select bank0
   999     0166  01AA               	clrf	___awmod@sign
  1000     0167                     i1l967:
  1001     0167  1FFC               	btfss	___awmod@dividend+1,7
  1002     0168  296A               	goto	u36_21
  1003     0169  296B               	goto	u36_20
  1004     016A                     u36_21:
  1005     016A  2972               	goto	i1l973
  1006     016B                     u36_20:
  1007     016B                     i1l969:
  1008     016B  09FB               	comf	___awmod@dividend,f
  1009     016C  09FC               	comf	___awmod@dividend+1,f
  1010     016D  0AFB               	incf	___awmod@dividend,f
  1011     016E  1903               	skipnz
  1012     016F  0AFC               	incf	___awmod@dividend+1,f
  1013     0170                     i1l971:
  1014     0170  01AA               	clrf	___awmod@sign
  1015     0171  0AAA               	incf	___awmod@sign,f
  1016     0172                     i1l973:
  1017     0172  1FFA               	btfss	___awmod@divisor+1,7
  1018     0173  2975               	goto	u37_21
  1019     0174  2976               	goto	u37_20
  1020     0175                     u37_21:
  1021     0175  297B               	goto	i1l977
  1022     0176                     u37_20:
  1023     0176                     i1l975:
  1024     0176  09F9               	comf	___awmod@divisor,f
  1025     0177  09FA               	comf	___awmod@divisor+1,f
  1026     0178  0AF9               	incf	___awmod@divisor,f
  1027     0179  1903               	skipnz
  1028     017A  0AFA               	incf	___awmod@divisor+1,f
  1029     017B                     i1l977:
  1030     017B  0879               	movf	___awmod@divisor,w
  1031     017C  047A               	iorwf	___awmod@divisor+1,w
  1032     017D  1903               	btfsc	3,2
  1033     017E  2980               	goto	u38_21
  1034     017F  2981               	goto	u38_20
  1035     0180                     u38_21:
  1036     0180  29B0               	goto	i1l995
  1037     0181                     u38_20:
  1038     0181                     i1l979:
  1039     0181  01A9               	clrf	___awmod@counter
  1040     0182  0AA9               	incf	___awmod@counter,f
  1041     0183  298F               	goto	i1l985
  1042     0184                     i1l981:
  1043     0184  3001               	movlw	1
  1044     0185                     u39_25:
  1045     0185  1003               	clrc
  1046     0186  0DF9               	rlf	___awmod@divisor,f
  1047     0187  0DFA               	rlf	___awmod@divisor+1,f
  1048     0188  3EFF               	addlw	-1
  1049     0189  1D03               	skipz
  1050     018A  2985               	goto	u39_25
  1051     018B                     i1l983:
  1052     018B  3001               	movlw	1
  1053     018C  00FD               	movwf	??___awmod
  1054     018D  087D               	movf	??___awmod,w
  1055     018E  07A9               	addwf	___awmod@counter,f
  1056     018F                     i1l985:
  1057     018F  1FFA               	btfss	___awmod@divisor+1,7
  1058     0190  2992               	goto	u40_21
  1059     0191  2993               	goto	u40_20
  1060     0192                     u40_21:
  1061     0192  2984               	goto	i1l981
  1062     0193                     u40_20:
  1063     0193                     i1l987:
  1064     0193  087A               	movf	___awmod@divisor+1,w
  1065     0194  027C               	subwf	___awmod@dividend+1,w
  1066     0195  1D03               	skipz
  1067     0196  2999               	goto	u41_25
  1068     0197  0879               	movf	___awmod@divisor,w
  1069     0198  027B               	subwf	___awmod@dividend,w
  1070     0199                     u41_25:
  1071     0199  1C03               	skipc
  1072     019A  299C               	goto	u41_21
  1073     019B  299D               	goto	u41_20
  1074     019C                     u41_21:
  1075     019C  29A3               	goto	i1l991
  1076     019D                     u41_20:
  1077     019D                     i1l989:
  1078     019D  0879               	movf	___awmod@divisor,w
  1079     019E  02FB               	subwf	___awmod@dividend,f
  1080     019F  087A               	movf	___awmod@divisor+1,w
  1081     01A0  1C03               	skipc
  1082     01A1  03FC               	decf	___awmod@dividend+1,f
  1083     01A2  02FC               	subwf	___awmod@dividend+1,f
  1084     01A3                     i1l991:
  1085     01A3  3001               	movlw	1
  1086     01A4                     u42_25:
  1087     01A4  1003               	clrc
  1088     01A5  0CFA               	rrf	___awmod@divisor+1,f
  1089     01A6  0CF9               	rrf	___awmod@divisor,f
  1090     01A7  3EFF               	addlw	-1
  1091     01A8  1D03               	skipz
  1092     01A9  29A4               	goto	u42_25
  1093     01AA                     i1l993:
  1094     01AA  3001               	movlw	1
  1095     01AB  02A9               	subwf	___awmod@counter,f
  1096     01AC  1D03               	btfss	3,2
  1097     01AD  29AF               	goto	u43_21
  1098     01AE  29B0               	goto	u43_20
  1099     01AF                     u43_21:
  1100     01AF  2993               	goto	i1l987
  1101     01B0                     u43_20:
  1102     01B0                     i1l995:
  1103     01B0  082A               	movf	___awmod@sign,w
  1104     01B1  1903               	btfsc	3,2
  1105     01B2  29B4               	goto	u44_21
  1106     01B3  29B5               	goto	u44_20
  1107     01B4                     u44_21:
  1108     01B4  29BA               	goto	i1l999
  1109     01B5                     u44_20:
  1110     01B5                     i1l997:
  1111     01B5  09FB               	comf	___awmod@dividend,f
  1112     01B6  09FC               	comf	___awmod@dividend+1,f
  1113     01B7  0AFB               	incf	___awmod@dividend,f
  1114     01B8  1903               	skipnz
  1115     01B9  0AFC               	incf	___awmod@dividend+1,f
  1116     01BA                     i1l999:
  1117     01BA  087C               	movf	___awmod@dividend+1,w
  1118     01BB  00FA               	movwf	?___awmod+1
  1119     01BC  087B               	movf	___awmod@dividend,w
  1120     01BD  00F9               	movwf	?___awmod
  1121     01BE                     i1l347:
  1122     01BE  0008               	return
  1123     01BF                     __end_of___awmod:
  1124                           
  1125                           	psect	text5
  1126     009D                     __ptext5:	
  1127 ;; *************** function ___awdiv *****************
  1128 ;; Defined at:
  1129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  divisor         2    0[COMMON] int 
  1132 ;;  dividend        2    2[COMMON] int 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  quotient        2    7[COMMON] int 
  1135 ;;  sign            1    6[COMMON] unsigned char 
  1136 ;;  counter         1    5[COMMON] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  2    0[COMMON] int 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         4       0       0       0       0
  1147 ;;      Locals:         4       0       0       0       0
  1148 ;;      Temps:          1       0       0       0       0
  1149 ;;      Totals:         9       0       0       0       0
  1150 ;;Total ram usage:        9 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_isr
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     009D                     ___awdiv:	
  1160                           ;psect for function ___awdiv
  1161                           
  1162     009D                     i1l921:	
  1163                           ;incstack = 0
  1164                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1165                           
  1166     009D  01F6               	clrf	___awdiv@sign
  1167     009E                     i1l923:
  1168     009E  1FF1               	btfss	___awdiv@divisor+1,7
  1169     009F  28A1               	goto	u26_21
  1170     00A0  28A2               	goto	u26_20
  1171     00A1                     u26_21:
  1172     00A1  28A9               	goto	i1l929
  1173     00A2                     u26_20:
  1174     00A2                     i1l925:
  1175     00A2  09F0               	comf	___awdiv@divisor,f
  1176     00A3  09F1               	comf	___awdiv@divisor+1,f
  1177     00A4  0AF0               	incf	___awdiv@divisor,f
  1178     00A5  1903               	skipnz
  1179     00A6  0AF1               	incf	___awdiv@divisor+1,f
  1180     00A7                     i1l927:
  1181     00A7  01F6               	clrf	___awdiv@sign
  1182     00A8  0AF6               	incf	___awdiv@sign,f
  1183     00A9                     i1l929:
  1184     00A9  1FF3               	btfss	___awdiv@dividend+1,7
  1185     00AA  28AC               	goto	u27_21
  1186     00AB  28AD               	goto	u27_20
  1187     00AC                     u27_21:
  1188     00AC  28B6               	goto	i1l935
  1189     00AD                     u27_20:
  1190     00AD                     i1l931:
  1191     00AD  09F2               	comf	___awdiv@dividend,f
  1192     00AE  09F3               	comf	___awdiv@dividend+1,f
  1193     00AF  0AF2               	incf	___awdiv@dividend,f
  1194     00B0  1903               	skipnz
  1195     00B1  0AF3               	incf	___awdiv@dividend+1,f
  1196     00B2                     i1l933:
  1197     00B2  3001               	movlw	1
  1198     00B3  00F4               	movwf	??___awdiv
  1199     00B4  0874               	movf	??___awdiv,w
  1200     00B5  06F6               	xorwf	___awdiv@sign,f
  1201     00B6                     i1l935:
  1202     00B6  01F7               	clrf	___awdiv@quotient
  1203     00B7  01F8               	clrf	___awdiv@quotient+1
  1204     00B8                     i1l937:
  1205     00B8  0870               	movf	___awdiv@divisor,w
  1206     00B9  0471               	iorwf	___awdiv@divisor+1,w
  1207     00BA  1903               	btfsc	3,2
  1208     00BB  28BD               	goto	u28_21
  1209     00BC  28BE               	goto	u28_20
  1210     00BD                     u28_21:
  1211     00BD  28F5               	goto	i1l957
  1212     00BE                     u28_20:
  1213     00BE                     i1l939:
  1214     00BE  01F5               	clrf	___awdiv@counter
  1215     00BF  0AF5               	incf	___awdiv@counter,f
  1216     00C0  28CC               	goto	i1l945
  1217     00C1                     i1l941:
  1218     00C1  3001               	movlw	1
  1219     00C2                     u29_25:
  1220     00C2  1003               	clrc
  1221     00C3  0DF0               	rlf	___awdiv@divisor,f
  1222     00C4  0DF1               	rlf	___awdiv@divisor+1,f
  1223     00C5  3EFF               	addlw	-1
  1224     00C6  1D03               	skipz
  1225     00C7  28C2               	goto	u29_25
  1226     00C8                     i1l943:
  1227     00C8  3001               	movlw	1
  1228     00C9  00F4               	movwf	??___awdiv
  1229     00CA  0874               	movf	??___awdiv,w
  1230     00CB  07F5               	addwf	___awdiv@counter,f
  1231     00CC                     i1l945:
  1232     00CC  1FF1               	btfss	___awdiv@divisor+1,7
  1233     00CD  28CF               	goto	u30_21
  1234     00CE  28D0               	goto	u30_20
  1235     00CF                     u30_21:
  1236     00CF  28C1               	goto	i1l941
  1237     00D0                     u30_20:
  1238     00D0                     i1l947:
  1239     00D0  3001               	movlw	1
  1240     00D1                     u31_25:
  1241     00D1  1003               	clrc
  1242     00D2  0DF7               	rlf	___awdiv@quotient,f
  1243     00D3  0DF8               	rlf	___awdiv@quotient+1,f
  1244     00D4  3EFF               	addlw	-1
  1245     00D5  1D03               	skipz
  1246     00D6  28D1               	goto	u31_25
  1247     00D7  0871               	movf	___awdiv@divisor+1,w
  1248     00D8  0273               	subwf	___awdiv@dividend+1,w
  1249     00D9  1D03               	skipz
  1250     00DA  28DD               	goto	u32_25
  1251     00DB  0870               	movf	___awdiv@divisor,w
  1252     00DC  0272               	subwf	___awdiv@dividend,w
  1253     00DD                     u32_25:
  1254     00DD  1C03               	skipc
  1255     00DE  28E0               	goto	u32_21
  1256     00DF  28E1               	goto	u32_20
  1257     00E0                     u32_21:
  1258     00E0  28E8               	goto	i1l953
  1259     00E1                     u32_20:
  1260     00E1                     i1l949:
  1261     00E1  0870               	movf	___awdiv@divisor,w
  1262     00E2  02F2               	subwf	___awdiv@dividend,f
  1263     00E3  0871               	movf	___awdiv@divisor+1,w
  1264     00E4  1C03               	skipc
  1265     00E5  03F3               	decf	___awdiv@dividend+1,f
  1266     00E6  02F3               	subwf	___awdiv@dividend+1,f
  1267     00E7                     i1l951:
  1268     00E7  1477               	bsf	___awdiv@quotient,0
  1269     00E8                     i1l953:
  1270     00E8  3001               	movlw	1
  1271     00E9                     u33_25:
  1272     00E9  1003               	clrc
  1273     00EA  0CF1               	rrf	___awdiv@divisor+1,f
  1274     00EB  0CF0               	rrf	___awdiv@divisor,f
  1275     00EC  3EFF               	addlw	-1
  1276     00ED  1D03               	skipz
  1277     00EE  28E9               	goto	u33_25
  1278     00EF                     i1l955:
  1279     00EF  3001               	movlw	1
  1280     00F0  02F5               	subwf	___awdiv@counter,f
  1281     00F1  1D03               	btfss	3,2
  1282     00F2  28F4               	goto	u34_21
  1283     00F3  28F5               	goto	u34_20
  1284     00F4                     u34_21:
  1285     00F4  28D0               	goto	i1l947
  1286     00F5                     u34_20:
  1287     00F5                     i1l957:
  1288     00F5  0876               	movf	___awdiv@sign,w
  1289     00F6  1903               	btfsc	3,2
  1290     00F7  28F9               	goto	u35_21
  1291     00F8  28FA               	goto	u35_20
  1292     00F9                     u35_21:
  1293     00F9  28FF               	goto	i1l961
  1294     00FA                     u35_20:
  1295     00FA                     i1l959:
  1296     00FA  09F7               	comf	___awdiv@quotient,f
  1297     00FB  09F8               	comf	___awdiv@quotient+1,f
  1298     00FC  0AF7               	incf	___awdiv@quotient,f
  1299     00FD  1903               	skipnz
  1300     00FE  0AF8               	incf	___awdiv@quotient+1,f
  1301     00FF                     i1l961:
  1302     00FF  0878               	movf	___awdiv@quotient+1,w
  1303     0100  00F1               	movwf	?___awdiv+1
  1304     0101  0877               	movf	___awdiv@quotient,w
  1305     0102  00F0               	movwf	?___awdiv
  1306     0103                     i1l334:
  1307     0103  0008               	return
  1308     0104                     __end_of___awdiv:
  1309     007E                     btemp	set	126	;btemp
  1310     007E                     wtemp0	set	126
  1311                           
  1312                           	psect	idloc
  1313                           
  1314                           ;Config register IDLOC0 @ 0x2000
  1315                           ;	unspecified, using default values
  1316     2000                     	org	8192
  1317     2000  3FFF               	dw	16383
  1318                           
  1319                           ;Config register IDLOC1 @ 0x2001
  1320                           ;	unspecified, using default values
  1321     2001                     	org	8193
  1322     2001  3FFF               	dw	16383
  1323                           
  1324                           ;Config register IDLOC2 @ 0x2002
  1325                           ;	unspecified, using default values
  1326     2002                     	org	8194
  1327     2002  3FFF               	dw	16383
  1328                           
  1329                           ;Config register IDLOC3 @ 0x2003
  1330                           ;	unspecified, using default values
  1331     2003                     	org	8195
  1332     2003  3FFF               	dw	16383
  1333                           
  1334                           	psect	config
  1335                           
  1336                           ;Config register CONFIG1 @ 0x2007
  1337                           ;	Oscillator Selection bits
  1338                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1339                           ;	Watchdog Timer Enable bit
  1340                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1341                           ;	Power-up Timer Enable bit
  1342                           ;	PWRTE = OFF, PWRT disabled
  1343                           ;	RE3/MCLR pin function select bit
  1344                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1345                           ;	Code Protection bit
  1346                           ;	CP = OFF, Program memory code protection is disabled
  1347                           ;	Data Code Protection bit
  1348                           ;	CPD = OFF, Data memory code protection is disabled
  1349                           ;	Brown Out Reset Selection bits
  1350                           ;	BOREN = OFF, BOR disabled
  1351                           ;	Internal External Switchover bit
  1352                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1353                           ;	Fail-Safe Clock Monitor Enabled bit
  1354                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1355                           ;	Low Voltage Programming Enable bit
  1356                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1357                           ;	In-Circuit Debugger Mode bit
  1358                           ;	DEBUG = 0x1, unprogramme  1359     2007                     	org	8199
  1360     2007  20D4               	dw	8404
  1361                           
  1362                           ;Config register CONFIG2 @ 0x2008
  1363                           ;	Brown-out Reset Selection bit
  1364                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1365                           ;	Flash Program Memory Self Write Enable bits
  1366                           ;	WRT = OFF, Write protection off
  1367     2008                     	org	8200
  1368     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              6 BANK0      2     2      0
                           _initUART
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0    1204
                                              2 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART
   _setup

 _isr (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 09 07:25:09 2023

                     l92 01F3                       l95 01DB             ___awdiv@sign 0076  
                    l901 01DC                      l911 01E8                      l903 01E0  
                    l913 01EB                      l905 01E1                      l915 01EE  
                    l907 01E2                      l917 01F1                      l909 01E5  
                    l919 01F2                      l871 01BF                      l881 01CB  
                    l873 01C2                      l891 01D7                      l883 01CC  
                    l875 01C6                      l893 01D8                      l885 01CD  
                    l877 01C7                      l895 01D9                      l887 01D4  
                    l879 01C8                      l897 01DA                      l889 01D6  
                    _RB0 0030                      _RB1 0031                      u500 015D  
                    u501 015C                      u517 0119                      u527 0128  
                    u537 0137                      u547 0145                      u557 0153  
                    _isr 0020             ___awmod@sign 002A                     l1031 0113  
                   l1041 013B                     l1033 011D                     l1051 015D  
                   l1043 013F                     l1035 0122                     l1027 0104  
                   l1053 015F                     l1045 0149                     l1037 012C  
                   l1029 010E                     l1047 014D                     l1039 0131  
                   l1049 0157                     ?_isr 0070                     _BRGH 04C2  
                   _CREN 00C4                     _IOCB 0096                     _RBIF 0058  
                   _RCIF 0065                     i1l80 0094                     _SPEN 00C7  
                   _TXEN 04C5                     _TXIF 0064                     _SYNC 04C4  
                   _WPUB 0095                     _main 0104                     btemp 007E  
                   start 000E                    ??_isr 002B                    ?_main 0070  
        __end_of___awdiv 0104                    _BRG16 0C3B          __end_of___awmod 01BF  
        ___awdiv@divisor 0070                    i1l334 0103                    i1l347 01BE  
                  i1l921 009D                    i1l931 00AD                    i1l923 009E  
                  i1l941 00C1                    i1l933 00B2                    i1l925 00A2  
                  i1l951 00E7                    i1l943 00C8                    i1l935 00B6  
                  i1l927 00A7                    i1l961 00FF                    i1l953 00E8  
                  i1l945 00CC                    i1l937 00B8                    i1l929 00A9  
                  i1l955 00EF                    i1l947 00D0                    i1l939 00BE  
                  i1l971 0170                    i1l949 00E1                    i1l957 00F5  
                  i1l981 0184                    i1l973 0172                    i1l965 0164  
                  i1l959 00FA                    i1l991 01A3                    i1l983 018B  
                  i1l975 0176                    i1l967 0167                    i1l993 01AA  
                  i1l985 018F                    i1l977 017B                    i1l969 016B  
                  i1l987 0193                    i1l979 0181                    i1l995 01B0  
                  i1l997 01B5                    i1l989 019D                    i1l999 01BA  
        ___awdiv@counter 0075                    _RCREG 001A                    u30_20 00D0  
                  u30_21 00CF                    u31_25 00D1                    u32_20 00E1  
                  u40_20 0193                    u32_21 00E0                    u40_21 0192  
                  u32_25 00DD                    u41_20 019D                    u41_21 019C  
                  u33_25 00E9                    u41_25 0199                    u34_20 00F5  
                  u26_20 00A2                    u34_21 00F4                    u26_21 00A1  
                  _SPBRG 0099                    u42_25 01A4                    u35_20 00FA  
                  u27_20 00AD                    u43_20 01B0                    u35_21 00F9  
                  u27_21 00AC                    u43_21 01AF                    _PORTA 0005  
                  _PORTD 0008                    _PORTE 0009                    u28_20 00BE  
                  u44_20 01B5                    u36_20 016B                    u28_21 00BD  
                  u44_21 01B4                    u36_21 016A                    u37_20 0176  
                  u45_20 0024                    u37_21 0175                    u45_21 0023  
                  u29_25 00C2                    u38_20 0181                    u46_20 0028  
                  u38_21 0180                    u46_21 0027                    u47_20 002C  
                  u47_21 002B                    u39_25 0185                    u48_20 0034  
                  u48_21 0033                    u56_27 0090                    u49_20 0038  
                  u49_21 0037                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089                    _TXREG 0019                    _setup 01BF  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0164                   ??_main 002F  
       ___awdiv@dividend 0072                   ?_setup 0070                   _ANSELH 0189  
                 i1l1011 0030                   i1l1003 0020                   i1l1021 0073  
                 i1l1013 0034                   i1l1005 0024                   i1l1023 0089  
                 i1l1015 0038                   i1l1007 0028                   i1l1017 003A  
                 i1l1009 002C                   i1l1025 008A                   i1l1019 0050  
                 _SPBRGH 009A                ??___awdiv 0074                   _decena 0022  
              ??___awmod 007D         __end_of_initUART 01F4         ___awdiv@quotient 0077  
        ___awmod@divisor 0079                   _numero 0026          ___awmod@counter 0029  
                 _unidad 0020                   saved_w 007E  __end_of__initialization 001C  
         __pcstackCOMMON 0070            __end_of_setup 01DC           _OPTION_REGbits 0081  
                ??_setup 002F               __pbssBANK0 0020               __pmaintext 0104  
             __pintentry 0004                ?_initUART 0070                  ___awdiv 009D  
                ___awmod 0164                  _centena 0024                  __ptext1 01BF  
                __ptext2 01DC                  __ptext3 0020                  __ptext4 0164  
                __ptext5 009D         ___awmod@dividend 007B     end_of_initialization 001C  
             ??_initUART 002F      start_initialization 0011              __end_of_isr 009D  
              ___latbits 0002            __pcstackBANK0 0029                 ?___awdiv 0070  
               ?___awmod 0079        interrupt_function 0004                 _PIR1bits 000C  
               _contador 0028                 _initUART 01DC               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F  
